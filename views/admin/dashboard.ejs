<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Admin dashboard for managing sellers and their products">
  <title>Admin Dashboard - Seller Center</title>
  
  <!-- Preload critical resources -->
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" as="style">
  <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" as="style">
  
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <style>
    :root {
      --primary-color: #4e73df;
      --primary-hover: #3a5bc7;
      --success-color: #1cc88a;
      --warning-color: #f6c23e;
      --danger-color: #e74a3b;
      --danger-hover: #d63a2b;
      --secondary-color: #858796;
      --dark-color: #5a5c69;
      --light-color: #f8f9fa;
      --border-color: #e0e0e0;
      --transition-speed: 0.3s;
    }
    
    body {
      background-color: #f5f7fb;
      font-family: 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }
    
    /* Main card styling */
    .main-card {
      border-radius: 0.75rem;
      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
      border: none;
      transition: all 0.3s ease;
    }
    
    .main-card:hover {
      box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.15);
    }
    
    /* Seller cards */
    .seller-card {
      border: none;
      border-radius: 0.5rem;
      overflow: hidden;
      transition: all var(--transition-speed) ease;
      margin-bottom: 1.25rem;
      background: white;
      box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.05);
    }
    
    .seller-card:hover {
      box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.1);
      transform: translateY(-3px);
    }
    
    .seller-header {
      background-color: var(--light-color);
      border-bottom: 1px solid var(--border-color);
      padding: 1.25rem;
    }
    
    /* Status badges */
    .status-badge {
      font-size: 0.75rem;
      padding: 0.35rem 0.75rem;
      border-radius: 0.25rem;
      display: inline-flex;
      align-items: center;
      gap: 0.35rem;
      font-weight: 600;
    }
    
    .status-pending { 
      background-color: var(--warning-color); 
      color: #000;
    }
    .status-approved { 
      background-color: var(--success-color); 
      color: white; 
    }
    .status-rejected { 
      background-color: var(--danger-color); 
      color: white; 
    }
    .status-blocked { 
      background-color: var(--secondary-color); 
      color: white; 
    }
    
    /* Action buttons */
    .action-buttons {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
      margin-top: 1rem;
    }
    
    /* Message bubbles */
    .message-bubble {
      max-width: 80%;
      padding: 0.75rem 1rem;
      border-radius: 1rem;
      margin-bottom: 0.75rem;
      position: relative;
    }
    
    .message-admin {
      background-color: var(--primary-color);
      color: white;
      align-self: flex-end;
      border-bottom-right-radius: 0.25rem;
    }
    
    .message-seller {
      background-color: #f1f1f1;
      color: #333;
      align-self: flex-start;
      border-bottom-left-radius: 0.25rem;
    }
    
    /* Message timestamp */
    .message-time {
      font-size: 0.75rem;
      color: rgba(255,255,255,0.7);
      margin-top: 0.25rem;
      text-align: right;
    }
    
    .message-time.seller {
      color: rgba(0,0,0,0.5);
    }
    
    /* Stats cards */
    .stat-card {
      border-radius: 0.5rem;
      padding: 1.25rem;
      margin-bottom: 1rem;
      color: white;
      transition: all 0.3s ease;
      height: 100%;
      border: none;
    }
    
    .stat-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.1);
    }
    
    /* Custom scrollbar */
    .messages-container {
      max-height: 300px;
      overflow-y: auto;
      scrollbar-width: thin;
    }
    
    .messages-container::-webkit-scrollbar {
      width: 6px;
    }
    
    .messages-container::-webkit-scrollbar-track {
      background: #f1f1f1;
    }
    
    .messages-container::-webkit-scrollbar-thumb {
      background: #888;
      border-radius: 3px;
    }
    
    /* Animation for new messages */
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .new-message {
      animation: fadeIn 0.3s ease-out;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
      .seller-card {
        margin-bottom: 1rem;
      }
      
      .action-buttons {
        justify-content: center;
      }
      
      .message-bubble {
        max-width: 90%;
      }
    }
  </style>
</head>
<body class="d-flex flex-column min-vh-100">
  <div class="container-fluid mt-3 flex-grow-1">
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
      <div class="text-center">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Processing...</p>
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4 g-3">
      <div class="col-md-3">
        <div class="stat-card bg-primary">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="mb-0">Total Sellers</h6>
              <div class="stat-value"><%= sellers.length %></div>
            </div>
            <i class="fas fa-users fa-2x opacity-50"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="stat-card bg-success">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="mb-0">Approved</h6>
              <div class="stat-value"><%= sellers.filter(s => s.approved && !s.blocked).length %></div>
            </div>
            <i class="fas fa-check-circle fa-2x opacity-50"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="stat-card bg-warning">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="mb-0">Pending</h6>
              <div class="stat-value"><%= sellers.filter(s => !s.approved && !s.blocked).length %></div>
            </div>
            <i class="fas fa-clock fa-2x opacity-50"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="stat-card bg-danger">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <h6 class="mb-0">Blocked</h6>
              <div class="stat-value"><%= sellers.filter(s => s.blocked).length %></div>
            </div>
            <i class="fas fa-ban fa-2x opacity-50"></i>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Card -->
    <div class="card main-card mb-4">
      <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-md-center bg-white border-0">
        <h1 class="h5 mb-2 mb-md-0">
          <i class="fas fa-users me-2"></i>Sellers Management
          <span class="badge bg-primary ms-2"><%= sellers.length %></span>
        </h1>
        
        <div class="d-flex flex-column flex-md-row gap-2 mt-2 mt-md-0">
          <!-- Filter Tabs -->
          <ul class="nav nav-pills" id="sellerFilterTabs">
            <li class="nav-item">
              <a class="nav-link active" href="#" data-filter="all">All</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#" data-filter="approved">Approved</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#" data-filter="pending">Pending</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#" data-filter="blocked">Blocked</a>
            </li>
          </ul>
          
          <!-- Search Container -->
          <div class="search-container">
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-search"></i></span>
              <input type="text" class="form-control" placeholder="Search sellers..." id="sellerSearch">
            </div>
          </div>
        </div>
      </div>
      
      <div class="card-body">
        <!-- View Switcher -->
        <ul class="nav nav-tabs mb-3" id="viewTabs">
          <li class="nav-item">
            <a class="nav-link active" href="#" data-view="sellers">Sellers</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" data-view="products">All Products</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" data-view="messages">Messages</a>
          </li>
        </ul>

        <!-- Sellers View -->
        <div id="sellersView">
          <% if (sellers.length === 0) { %>
            <div class="empty-state text-center py-5">
              <i class="fas fa-user-slash mb-3 fa-3x text-muted"></i>
              <h2 class="h5 text-muted">No sellers found</h2>
              <a href="#" class="btn btn-primary mt-3" id="refreshButton">
                <i class="fas fa-sync-alt me-1"></i>Refresh List
              </a>
            </div>
          <% } else { %>
            <div class="sellers-list">
              <% sellers.forEach(seller => { %>
                <article class="seller-card" data-seller-id="<%= seller.id %>" 
                         data-status="<%= seller.blocked ? 'blocked' : seller.approved ? 'approved' : 'pending' %>">
                  <div class="seller-header">
                    <div class="d-flex align-items-center mb-2">
                      <% if (seller.profilePhoto) { %>
                        <img src="/uploads/<%= seller.profilePhoto %>" class="rounded-circle me-3" width="48" height="48" 
                             alt="<%= seller.name %>'s profile photo" 
                             onerror="this.onerror=null;this.src='https://ui-avatars.com/api/?name=<%= encodeURIComponent(seller.name) %>&background=random'">
                      <% } else { %>
                        <div class="rounded-circle bg-light d-flex align-items-center justify-content-center me-3" 
                             style="width:48px;height:48px">
                          <i class="fas fa-user text-muted"></i>
                        </div>
                      <% } %>
                      <div>
                        <h2 class="h5 mb-0"><%= seller.name %></h2>
                        <div class="text-muted small"><%= seller.email %></div>
                        <div class="text-muted small">
                          <i class="fas fa-box-open me-1"></i>
                          <%= seller.products ? seller.products.length : 0 %> products
                        </div>
                      </div>
                    </div>
                    
                    <div class="d-flex justify-content-between align-items-center">
                      <div>
                        <span class="status-badge <%= seller.blocked ? 'status-blocked' : seller.approved ? 'status-approved' : 'status-pending' %>">
                          <i class="fas <%= seller.blocked ? 'fa-ban' : seller.approved ? 'fa-check-circle' : 'fa-clock' %>"></i>
                          <%= seller.blocked ? 'Blocked' : seller.approved ? 'Approved' : 'Pending' %>
                        </span>
                        <% if (seller.rejectionReason) { %>
                          <span class="status-badge status-rejected ms-2">
                            <i class="fas fa-times-circle"></i> Rejected
                          </span>
                        <% } %>
                      </div>
                      
                      <button class="btn btn-sm btn-outline-primary toggle-details-btn" 
                              data-bs-toggle="collapse" 
                              data-bs-target="#details-<%= seller.id %>">
                        <i class="fas fa-chevron-down me-1"></i> Details
                      </button>
                    </div>
                  </div>
                  
                  <!-- Seller Details (Collapsible) -->
                  <section class="collapse" id="details-<%= seller.id %>">
                    <div class="p-3">
                      <% if (seller.rejectionReason) { %>
                        <div class="alert alert-danger mb-3">
                          <strong><i class="fas fa-exclamation-triangle me-2"></i>Rejection Reason:</strong>
                          <%= seller.rejectionReason %>
                        </div>
                      <% } %>
                      
                      <div class="row">
                        <!-- Personal Info -->
                        <div class="col-md-6">
                          <div class="detail-section mb-3">
                            <h3 class="h6"><i class="fas fa-user-circle me-2"></i>Personal Information</h3>
                            <div class="detail-row mb-2">
                              <span class="detail-label">Name:</span>
                              <span class="detail-value"><%= seller.name %></span>
                            </div>
                            <div class="detail-row mb-2">
                              <span class="detail-label">Email:</span>
                              <span class="detail-value"><%= seller.email %></span>
                            </div>
                            <div class="detail-row mb-2">
                              <span class="detail-label">Phone:</span>
                              <span class="detail-value"><%= seller.phone || 'Not provided' %></span>
                            </div>
                            <div class="detail-row">
                              <span class="detail-label">Registered:</span>
                              <span class="detail-value"><%= new Date(seller.createdAt).toLocaleString() %></span>
                            </div>
                          </div>
                        </div>
                        
                        <!-- Business Info -->
                        <div class="col-md-6">
                          <div class="detail-section mb-3">
                            <h3 class="h6"><i class="fas fa-briefcase me-2"></i>Business Information</h3>
                            <div class="detail-row mb-2">
                              <span class="detail-label">Business Name:</span>
                              <span class="detail-value"><%= seller.businessName || 'Not provided' %></span>
                            </div>
                            <div class="detail-row mb-2">
                              <span class="detail-label">Category:</span>
                              <span class="detail-value"><%= seller.productCategory || 'Not provided' %></span>
                            </div>
                            <div class="detail-row">
                              <span class="detail-label">Location:</span>
                              <span class="detail-value"><%= seller.city %>, <%= seller.country %></span>
                            </div>
                          </div>
                        </div>
                      </div>
                      
                      <!-- Documents Section -->
                      <div class="detail-section mb-3">
                        <h3 class="h6"><i class="fas fa-file-alt me-2"></i>Documents</h3>
                        <div class="d-flex flex-wrap gap-2">
                          <% if (seller.profilePhoto) { %>
                            <img src="/uploads/<%= seller.profilePhoto %>" class="document-thumb"
                                 onclick="showDocumentModal(this.src, 'Profile Photo')"
                                 title="Profile Photo"
                                 alt="Profile photo document">
                          <% } %>
                          <% if (seller.idFront) { %>
                            <img src="/uploads/<%= seller.idFront %>" class="document-thumb"
                                 onclick="showDocumentModal(this.src, 'ID Front')"
                                 title="ID Front"
                                 alt="ID front document">
                          <% } %>
                          <% if (seller.idBack) { %>
                            <img src="/uploads/<%= seller.idBack %>" class="document-thumb"
                                 onclick="showDocumentModal(this.src, 'ID Back')"
                                 title="ID Back"
                                 alt="ID back document">
                          <% } %>
                          <% if (!seller.profilePhoto && !seller.idFront && !seller.idBack) { %>
                            <div class="text-muted">No documents uploaded</div>
                          <% } %>
                        </div>
                      </div>
                      
                      <!-- Messages Section (Updated part) -->
                      <div class="detail-section mb-3">
                        <h3 class="h6"><i class="fas fa-comments me-2"></i>Messages</h3>
                        <div class="messages-container d-flex flex-column p-2 mb-3" id="messages-<%= seller.id %>" style="background-color: #f9f9f9; border-radius: 0.5rem;">
                          <% if (seller.messages && seller.messages.length > 0) { %>
                            <% seller.messages.forEach(message => { %>
                              <div class="message-bubble <%= message.fromAdmin ? 'message-admin' : 'message-seller' %>">
                                <%= message.text %>
                                <div class="message-time <%= message.fromAdmin ? '' : 'seller' %>">
                                  <%= new Date(message.timestamp).toLocaleString() %>
                                  <% if (!message.seen && !message.fromAdmin) { %>
                                    <span class="badge bg-danger ms-1" style="font-size: 0.6rem;">New</span>
                                  <% } else if (message.fromAdmin) { %>
                                    <i class="fas fa-check-circle ms-1" style="font-size: 0.6rem;"></i>
                                  <% } %>
                                </div>
                              </div>
                            <% }); %>
                          <% } else { %>
                            <div class="text-center text-muted py-3">No messages yet</div>
                          <% } %>
                        </div>
                        
                        <!-- Message Form -->
                        <form class="message-form" data-seller-id="<%= seller.id %>">
                          <div class="input-group">
                            <textarea class="form-control" placeholder="Type your message..." rows="2" required></textarea>
                            <button class="btn btn-primary" type="submit">
                              <i class="fas fa-paper-plane"></i>
                            </button>
                          </div>
                        </form>
                      </div>
                      
                      <!-- Action Buttons -->
                      <div class="action-buttons">
                        <% if (!seller.blocked) { %>
                          <% if (!seller.approved) { %>
                            <button class="btn btn-success btn-sm approve-btn" data-id="<%= seller.id %>">
                              <i class="fas fa-check me-1"></i> Approve
                            </button>
                            <button class="btn btn-danger btn-sm reject-btn" data-id="<%= seller.id %>">
                              <i class="fas fa-times me-1"></i> Reject
                            </button>
                          <% } else { %>
                            <button class="btn btn-danger btn-sm block-btn" data-id="<%= seller.id %>">
                              <i class="fas fa-ban me-1"></i> Block
                            </button>
                          <% } %>
                        <% } else { %>
                          <button class="btn btn-primary btn-sm unblock-btn" data-id="<%= seller.id %>">
                            <i class="fas fa-lock-open me-1"></i> Unblock
                          </button>
                        <% } %>
                      </div>
                    </div>
                  </section>
                </article>
              <% }); %>
            </div>
          <% } %>
        </div>

        <!-- Products View -->
        <div id="productsView" style="display: none;">
          <% 
            let allProducts = [];
            sellers.forEach(seller => {
              if (seller.products && seller.products.length > 0) {
                seller.products.forEach(product => {
                  product.sellerName = seller.name;
                  product.sellerId = seller.id;
                  allProducts.push(product);
                });
              }
            });
          %>
          
          <% if (allProducts.length === 0) { %>
            <div class="empty-state text-center py-5">
              <i class="fas fa-box-open mb-3 fa-3x text-muted"></i>
              <h2 class="h5 text-muted">No products found</h2>
            </div>
          <% } else { %>
            <div class="mb-3">
              <ul class="nav nav-pills" id="productFilterTabs">
                <li class="nav-item">
                  <a class="nav-link active" href="#" data-filter="all">All</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#" data-filter="approved">Approved</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#" data-filter="pending">Pending</a>
                </li>

            </div>
            
            <div class="products-list">
              <% allProducts.forEach(product => { %>
                <div class="product-card mb-3 <%= product.approved ? 'approved' : product.rejected ? 'rejected' : 'pending' %>" 
                     data-status="<%= product.approved ? 'approved' : product.rejected ? 'rejected' : 'pending' %>">
                  <div class="d-flex align-items-start">
                    <% if (product.images && product.images.length > 0) { %>
                      <img src="/uploads/<%= product.images[0] %>" class="product-image" 
                           alt="<%= product.name %>"
                           onerror="this.src='https://via.placeholder.com/80?text=Product'">
                    <% } else { %>
                      <div class="product-image bg-light d-flex align-items-center justify-content-center">
                        <i class="fas fa-box-open text-muted"></i>
                      </div>
                    <% } %>
                    <div class="flex-grow-1">
                      <h4 class="h6 mb-1"><%= product.name %></h4>
                      <p class="mb-1 text-muted small">Seller: <%= product.sellerName %></p>
                      <p class="mb-1 text-muted small">Price: $<%= product.price.toFixed(2) %></p>
                      <p class="mb-1 text-muted small">Category: <%= product.category || 'N/A' %></p>
                      <p class="mb-1 text-muted small">Stock: <%= product.stock || 0 %></p>
                    </div>
                  </div>
                  <span class="product-status <%= product.approved ? 'bg-success' : product.rejected ? 'bg-danger' : 'bg-warning' %>">
                    <%= product.approved ? 'Approved' : product.rejected ? 'Rejected' : 'Pending' %>
                  </span>
                  <div class="d-flex justify-content-end mt-2 gap-2">
                    <button class="btn btn-sm <%= product.approved ? 'btn-outline-danger' : 'btn-outline-success' %>"
                            onclick="toggleProductApproval('<%= product.id %>', <%= !product.approved %>, this)">
                      <%= product.approved ? 'Reject' : 'Approve' %>
                    </button>
                    <button class="btn btn-sm btn-outline-primary" 
                            onclick="showProductDetails('<%= product.id %>')">
                      <i class="fas fa-eye"></i> View
                    </button>
                  </div>
                </div>
              <% }); %>
            </div>
          <% } %>
        </div>

        <!-- Messages View - Updated Section -->
        <div id="messagesView" style="display: none;">
          <div class="row">
            <div class="col-md-4">
              <div class="card mb-3">
                <div class="card-header bg-white">
                  <h3 class="h6 mb-0">Sellers</h3>
                </div>
                <div class="list-group list-group-flush" id="sellersList" style="max-height: 600px; overflow-y: auto;">
                  <% sellers.forEach(seller => { %>
                    <a href="#" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center seller-list-item"
                      data-seller-id="<%= seller.id %>">
                      <div class="d-flex align-items-center">
                        <% if (seller.profilePhoto) { %>
                          <img src="/uploads/<%= seller.profilePhoto %>" class="rounded-circle me-3" width="40" height="40" 
                              alt="<%= seller.name %>'s profile photo" 
                              onerror="this.onerror=null;this.src='https://ui-avatars.com/api/?name=<%= encodeURIComponent(seller.name) %>&background=random'">
                        <% } else { %>
                          <div class="rounded-circle bg-light d-flex align-items-center justify-content-center me-3" 
                              style="width:40px;height:40px">
                            <i class="fas fa-user text-muted"></i>
                          </div>
                        <% } %>
                        <div>
                          <h6 class="mb-0"><%= seller.name %></h6>
                          <small class="text-muted"><%= seller.email %></small>
                        </div>
                      </div>
                      <% if (seller.unreadMessages > 0) { %>
                        <span class="badge bg-primary rounded-pill"><%= seller.unreadMessages %></span>
                      <% } %>
                    </a>
                  <% }); %>
                </div>
              </div>
            </div>
            <div class="col-md-8">
              <div class="card">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                  <h3 class="h6 mb-0" id="currentSellerName">Select a seller to view messages</h3>
                  <div class="btn-group">
                    <button class="btn btn-sm btn-outline-secondary" id="markAsReadBtn" disabled>
                      <i class="fas fa-check-circle me-1"></i> Mark as read
                    </button>
                  </div>
                </div>
                <div class="card-body">
                  <div class="messages-container d-flex flex-column p-3 mb-3" id="selectedSellerMessages" 
                      style="background-color: #f9f9f9; border-radius: 0.5rem; min-height: 400px;">
                    <div class="text-center text-muted py-5">
                      <i class="fas fa-comments fa-2x mb-3"></i>
                      <p>Select a seller to view your conversation</p>
                    </div>
                  </div>
                  <form id="selectedSellerMessageForm" style="display: none;">
                    <div class="input-group">
                      <textarea class="form-control" placeholder="Type your message..." rows="2" required></textarea>
                      <button class="btn btn-primary" type="submit">
                        <i class="fas fa-paper-plane"></i>
                      </button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Document Preview Modal -->
  <div class="modal fade" id="documentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h2 class="modal-title h5">Document Preview</h2>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body text-center">
          <img id="documentPreview" src="" class="img-fluid" style="max-height: 70vh;" alt="Document Preview">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <a id="downloadDocument" href="#" class="btn btn-primary" download>
            <i class="fas fa-download me-1"></i> Download
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Product Details Modal -->
  <div class="modal fade" id="productModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h2 class="modal-title h5">Product Details</h2>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="productModalBody">
          <!-- Content loaded dynamically -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // Document modal function
    function showDocumentModal(src, title) {
      const modal = new bootstrap.Modal(document.getElementById('documentModal'));
      const previewImg = document.getElementById('documentPreview');
      const downloadLink = document.getElementById('downloadDocument');
      
      previewImg.src = src;
      downloadLink.href = src;
      downloadLink.download = title.replace(/\s+/g, '_') + '.jpg';
      document.getElementById('documentModalTitle').textContent = title;
      modal.show();
    }
    
    // Loading overlay control
    function showLoading(show) {
      document.getElementById('loadingOverlay').classList.toggle('active', show);
    }
    
    // Handle seller actions
    async function handleSellerAction(sellerId, action) {
      showLoading(true);
      
      try {
        let body = { action };
        if (action === 'reject') {
          const reason = prompt('Enter rejection reason:');
          if (!reason) {
            showLoading(false);
            return;
          }
          body.reason = reason;
        } else {
          const actionMap = {
            'approve': 'approve this seller',
            'block': 'block this seller',
            'unblock': 'unblock this seller'
          };
          
          if (actionMap[action] && !confirm(`Are you sure you want to ${actionMap[action]}?`)) {
            showLoading(false);
            return;
          }
        }
        
        const response = await fetch(`/admin/toggle-seller/${sellerId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(body)
        });
        
        if (!response.ok) throw new Error('Network response was not ok');
        
        const data = await response.json();
        
        if (data.success) {
          window.location.reload();
        } else {
          alert(data.error || 'Operation failed');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to perform action. Please try again.');
      } finally {
        showLoading(false);
      }
    }
    
    // Product approval toggle
    async function toggleProductApproval(productId, approve, button) {
      if (!confirm(`Are you sure you want to ${approve ? 'approve' : 'reject'} this product?`)) return;
      
      showLoading(true);
      button.disabled = true;
      
      try {
        const response = await fetch(`/admin/toggle-product/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            action: approve ? 'approve' : 'reject'
          })
        });
        
        if (!response.ok) throw new Error('Network response was not ok');
        
        const data = await response.json();
        
        if (data.success) {
          window.location.reload();
        } else {
          alert(data.error || 'Failed to update product');
          button.disabled = false;
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to update product. Please try again.');
        button.disabled = false;
      } finally {
        showLoading(false);
      }
    }
    
    // Show product details
    async function showProductDetails(productId) {
      showLoading(true);
      
      try {
        const response = await fetch(`/admin/product-details/${productId}`);
        if (!response.ok) throw new Error('Network response was not ok');
        
        const data = await response.json();
        
        if (data.success) {
          const product = data.product;
          const modal = new bootstrap.Modal(document.getElementById('productModal'));
          
          document.getElementById('productModalTitle').textContent = product.name;
          
          let imagesHtml = '';
          if (product.images && product.images.length > 0) {
            imagesHtml = `<div class="mb-3">
              <h6 class="h6">Images</h6>
              <div class="d-flex flex-wrap gap-2">`;
            
            product.images.forEach(img => {
              imagesHtml += `<img src="/uploads/${img}" class="document-thumb" 
                              onclick="showDocumentModal('/uploads/${img}', '${product.name}')"
                              alt="Product image">`;
            });
            
            imagesHtml += `</div></div>`;
          }
          
          document.getElementById('productModalBody').innerHTML = `
            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <h6 class="h6">Name:</h6>
                  <p>${product.name}</p>
                </div>
                <div class="mb-3">
                  <h6 class="h6">Price:</h6>
                  <p>$${product.price.toFixed(2)}</p>
                </div>
                <div class="mb-3">
                  <h6 class="h6">Category:</h6>
                  <p>${product.category || 'N/A'}</p>
                </div>
              </div>
              <div class="col-md-6">
                <div class="mb-3">
                  <h6 class="h6">Seller:</h6>
                  <p>${product.sellerName || 'N/A'}</p>
                </div>
                <div class="mb-3">
                  <h6 class="h6">Status:</h6>
                  <span class="badge ${product.approved ? 'bg-success' : product.rejected ? 'bg-danger' : 'bg-warning'}">
                    ${product.approved ? 'Approved' : product.rejected ? 'Rejected' : 'Pending'}
                  </span>
                </div>
                <div class="mb-3">
                  <h6 class="h6">Created:</h6>
                  <p>${new Date(product.createdAt).toLocaleString()}</p>
                </div>
              </div>
            </div>
            ${imagesHtml}
            <div class="mb-3">
              <h6 class="h6">Description</h6>
              <p>${product.description || 'No description provided'}</p>
            </div>`;
          
          modal.show();
        } else {
          alert(data.error || 'Failed to load product details');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to load product details. Please try again.');
      } finally {
        showLoading(false);
      }
    }
    
    // Send message to seller
    async function sendMessage(sellerId, message) {
      showLoading(true);
      
      try {
        const response = await fetch(`/admin/message-seller/${sellerId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ text: message })
        });
        
        if (!response.ok) throw new Error('Network response was not ok');
        
        const data = await response.json();
        
        if (data.success) {
          // Add message to UI
          const messagesContainer = document.getElementById(`messages-${sellerId}`) || 
                                  document.getElementById('selectedSellerMessages');
          
          if (messagesContainer) {
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message-bubble message-admin new-message';
            messageDiv.innerHTML = `
              ${message}
              <div class="message-time">
                ${new Date().toLocaleString()}
                <i class="fas fa-check-circle ms-1" style="font-size: 0.6rem;"></i>
              </div>
            `;
            
            if (messagesContainer.querySelector('.text-muted')) {
              messagesContainer.innerHTML = '';
            }
            
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
          }
        } else {
          alert(data.error || 'Failed to send message');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to send message. Please try again.');
      } finally {
        showLoading(false);
      }
    }
    
    // Initialize the page
    document.addEventListener('DOMContentLoaded', function() {
      // Seller action buttons
      document.querySelectorAll('.approve-btn, .reject-btn, .block-btn, .unblock-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const sellerId = this.getAttribute('data-id');
          const action = this.classList.contains('approve-btn') ? 'approve' :
                        this.classList.contains('reject-btn') ? 'reject' :
                        this.classList.contains('block-btn') ? 'block' : 'unblock';
          
          handleSellerAction(sellerId, action);
        });
      });
      
      // Search functionality
      const sellerSearch = document.getElementById('sellerSearch');
      let searchTimeout;
      
      sellerSearch.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          const searchTerm = this.value.toLowerCase().trim();
          document.querySelectorAll('.seller-card').forEach(card => {
            const sellerName = card.querySelector('h2, h5').textContent.toLowerCase();
            const sellerEmail = card.querySelector('.text-muted.small').textContent.toLowerCase();
            card.style.display = (sellerName.includes(searchTerm) || sellerEmail.includes(searchTerm)) 
              ? 'block' : 'none';
          });
        }, 300);
      });
      
      // Filter functionality for sellers
      document.querySelectorAll('#sellerFilterTabs .nav-link').forEach(tab => {
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Update active tab
          document.querySelectorAll('#sellerFilterTabs .nav-link').forEach(t => {
            t.classList.remove('active');
          });
          this.classList.add('active');
          
          const filter = this.getAttribute('data-filter');
          
          document.querySelectorAll('.seller-card').forEach(card => {
            if (filter === 'all') {
              card.style.display = 'block';
            } else {
              const status = card.getAttribute('data-status');
              card.style.display = status === filter ? 'block' : 'none';
            }
          });
        });
      });
      
      // Filter functionality for products
      document.querySelectorAll('#productFilterTabs .nav-link').forEach(tab => {
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Update active tab
          document.querySelectorAll('#productFilterTabs .nav-link').forEach(t => {
            t.classList.remove('active');
          });
          this.classList.add('active');
          
          const filter = this.getAttribute('data-filter');
          
          document.querySelectorAll('#productsView .product-card').forEach(card => {
            if (filter === 'all') {
              card.style.display = 'block';
            } else {
              const status = card.getAttribute('data-status');
              card.style.display = status === filter ? 'block' : 'none';
            }
          });
        });
      });
      
      // View switcher
      document.querySelectorAll('#viewTabs .nav-link').forEach(tab => {
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Update active tab
          document.querySelectorAll('#viewTabs .nav-link').forEach(t => {
            t.classList.remove('active');
          });
          this.classList.add('active');
          
          const view = this.getAttribute('data-view');
          
          document.getElementById('sellersView').style.display = view === 'sellers' ? 'block' : 'none';
          document.getElementById('productsView').style.display = view === 'products' ? 'block' : 'none';
          document.getElementById('messagesView').style.display = view === 'messages' ? 'block' : 'none';
        });
      });
      
      // Message forms
      document.querySelectorAll('.message-form').forEach(form => {
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          const sellerId = this.getAttribute('data-seller-id');
          const message = this.querySelector('textarea').value.trim();
          
          if (message) {
            sendMessage(sellerId, message);
            this.querySelector('textarea').value = '';
          }
        });
      });
      
      // Selected seller messages
      document.querySelectorAll('.seller-list-item').forEach(item => {
        item.addEventListener('click', function(e) {
          e.preventDefault();
          const sellerId = this.getAttribute('data-seller-id');
          const sellerName = this.querySelector('h6').textContent;
          
          // Highlight selected seller
          document.querySelectorAll('.seller-list-item').forEach(i => {
            i.classList.remove('active');
          });
          this.classList.add('active');
          
          // Update UI
          document.getElementById('currentSellerName').textContent = sellerName;
          document.getElementById('markAsReadBtn').disabled = false;
          document.getElementById('selectedSellerMessageForm').style.display = 'block';
          
          // Load messages (in a real app, this would fetch from server)
          const messagesContainer = document.getElementById('selectedSellerMessages');
          messagesContainer.innerHTML = '';
          
          // Add loading indicator
          messagesContainer.innerHTML = '<div class="text-center py-3"><i class="fas fa-spinner fa-spin"></i></div>';
          
          // Simulate loading messages
          setTimeout(() => {
            // In a real app, you would fetch messages for this seller from the server
            const seller = sellers.find(s => s.id === sellerId);
            
            if (seller && seller.messages && seller.messages.length > 0) {
              messagesContainer.innerHTML = '';
              
              seller.adminMessages.forEach(message => {
                // Admin Message
                const adminMsgDiv = document.createElement('div');
                adminMsgDiv.className = 'message-bubble message-admin';
                adminMsgDiv.innerHTML = `
                  <strong>Admin:</strong> ${message.text}
                  <div class="message-time">
                    ${new Date(message.date).toLocaleString()}
                    <i class="fas fa-check-circle ms-1" style="font-size: 0.6rem;"></i>
                  </div>
                `;
                messagesContainer.appendChild(adminMsgDiv);

                // Optional Seller Reply
                if (message.reply) {
                  const replyDiv = document.createElement('div');
                  replyDiv.className = 'message-bubble message-seller mt-2';
                  replyDiv.innerHTML = `
                    <strong>Seller:</strong> ${message.reply}
                    <div class="message-time seller">
                      ${new Date(message.repliedAt).toLocaleString()}
                    </div>
                  `;
                  messagesContainer.appendChild(replyDiv);
                }
              });

              
              messagesContainer.scrollTop = messagesContainer.scrollHeight;
            } else {
              messagesContainer.innerHTML = '<div class="text-center text-muted py-5">No messages yet</div>';
            }
          }, 500);
        });
      });
      
      // Mark as read button
      document.getElementById('markAsReadBtn').addEventListener('click', function() {
        const activeItem = document.querySelector('.seller-list-item.active');
        if (activeItem) {
          const badge = activeItem.querySelector('.badge');
          if (badge) {
            badge.remove();
          }
          this.disabled = true;
        }
      });
      
      // Selected seller message form
      document.getElementById('selectedSellerMessageForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const activeItem = document.querySelector('.seller-list-item.active');
        if (!activeItem) return;
        
        const sellerId = activeItem.getAttribute('data-seller-id');
        const message = this.querySelector('textarea').value.trim();
        
        if (message) {
          sendMessage(sellerId, message);
          this.querySelector('textarea').value = '';
        }
      });
      
      // Toggle details button icon
      document.querySelectorAll('.toggle-details-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const icon = this.querySelector('i');
          if (this.getAttribute('aria-expanded') === 'true') {
            icon.className = 'fas fa-chevron-down me-1';
          } else {
            icon.className = 'fas fa-chevron-up me-1';
          }
        });
      });
      
      // Refresh button
      document.getElementById('refreshButton')?.addEventListener('click', function(e) {
        e.preventDefault();
        window.location.reload();
      });
    });
  </script>
</body>
</html>